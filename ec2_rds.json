{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation for JIRA_Single_Instance_With_RDS:  This template installs a single-instance JIRA that uses an Amazon RDS database instance for storage.",

  "Parameters" : {

    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern" : "[\\x20-\\x7E]*",
      "ConstraintDescription" : "can contain only ASCII characters."
    },

    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "t3.large",
      "AllowedValues" : [ "t1.micro", "t2.micro", "t2.small", "t2.medium", "t3.large", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge" ],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "DBClass" : {
      "Default" : "db.t2.micro",
      "Description" : "Database instance class",
      "Type" : "String",
      "AllowedValues" : [ "db.t1.micro", "db.t2.micro", "db.t2.small", "db.t2.medium", "db.m3.medium", "db.m3.large", "db.m3.xlarge", "db.m3.2xlarge" ],
      "ConstraintDescription" : "must select a valid database instance type."
    },

    "DBName" : {
      "Default": "jira",
      "Description" : "The jira database name",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },

    "DBUsername" : {
      "Default": "jira",
      "NoEcho": "true",
      "Description" : "The jira database admin account username",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },

    "DBPassword" : {
      "Default": "jirapasschangeit",
      "NoEcho": "true",
      "Description" : "The jira database admin account password",
      "Type": "String",
      "MinLength": "8",
      "MaxLength": "41",
      "AllowedPattern" : "[a-zA-Z0-9]*",
      "ConstraintDescription" : "must contain only alphanumeric characters."
    },

    "DBAllocatedStorage" : {
      "Default": "5",
      "Description" : "The size of the database (Gb)",
      "Type": "Number",
      "MinValue": "5",
      "MaxValue": "1024",
      "ConstraintDescription" : "must be between 5 and 1024Gb."
    },
    "SSHLocation" : {
      "Description" : " The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
	"AnsibleRepository": {
            "Default": "https://bitbucket.org/sunil_pothireddy/jira-ansible",
            "Description": "The git repository of JIRA playbooks",
            "Type": "String"
    },
    "AnsibleCheckout": {
            "Default": "6bba3bc87142d5311313032d865167b54dc2adc1",
            "Description": "The branch/tag/commit to checkout",
            "Type": "String"
    },
    "AnsiblePlaybook": {
            "Default": "playbook.yml",
            "Description": "The playbook to use",
            "Type": "String"
    }
  },
     "Mappings" : {
      "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "PV64"  },
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
      "t3.large"    : { "Arch" : "HVM64"  },
      "m3.medium"   : { "Arch" : "PV64"   },
      "m3.large"    : { "Arch" : "PV64"   },
      "m3.xlarge"   : { "Arch" : "PV64"   },
      "m3.2xlarge"  : { "Arch" : "PV64"   }
    },

    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "PV64" : "ami-00f0abdef923519b0", "HVM64" : "ami-0ff8a91507f77f867" },
      "us-west-2"      : { "PV64" : "ami-afe1c0d7", "HVM64" : "ami-a0cfeed8" },
      "us-west-1"      : { "PV64" : "ami-06819ed4f6553bd1e", "HVM64" : "ami-0bdb828fd58c52235" }
    }
  },
   "Resources": {
        "Ec2Instance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
                "InstanceType": { "Ref" : "InstanceType" },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "SecurityGroups": [
                    {
                        "Ref": "WebServerSecurityGroup"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "yum update -y\n",
                                "yum update -y aws-cfn-bootstrap\n",
                                "/opt/aws/bin/cfn-signal -e 0 '", { "Ref" : "WaitHandle" }, "'\n",
                                "yum install epel-release -y\n",
                                "yum install -y ansible git\n",
                                "pip install ansible",
                                "echo \"localhost ansible_connection=local\" > /etc/ansible/hosts\n",
                                "ansible-pull -U ", {"Ref": "AnsibleRepository"},
                                " -C ", {"Ref": "AnsibleCheckout"},
                                "-e jira_database_host=", {"Fn::GetAtt" : ["DBInstance", "Endpoint.Address"]},
                                " ", {"Ref": "AnsiblePlaybook"}
                            ]
                        ]
                    }
                }
            }
        },
    "WaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },
    "WaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "Ec2Instance",
      "Properties" : {
        "Handle" : {"Ref" : "WaitHandle"},
        "Timeout" : "600"
      }
    },    
	 "DBInstance" : {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "DBName"            : { "Ref" : "DBName" },
        "Engine"            : "MySQL",
        "MasterUsername"    : { "Ref" : "DBUsername" },
        "DBInstanceClass"   : { "Ref" : "DBClass" },
        "DBSecurityGroups"  : [{ "Ref" : "DBSecurityGroup" }],
        "AllocatedStorage"  : { "Ref" : "DBAllocatedStorage" },
        "MasterUserPassword": { "Ref" : "DBPassword" }
      }
    },

    "DBSecurityGroup": {
      "Type": "AWS::RDS::DBSecurityGroup",
      "Properties": {
        "DBSecurityGroupIngress": { "EC2SecurityGroupName": { "Ref": "WebServerSecurityGroup"} },
        "GroupDescription"      : "Frontend Access"
      }
    },

    "WebServerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP access via port 80 and SSH access",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "8080", "ToPort" : "8080", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}}
        ]
      }
    }
  },
  "Outputs" : {
    "WebsiteURL" : {
      "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "Ec2Instance", "PublicDnsName" ]}, ":8080"]] },
      "Description" : "JIRA Website URL"
    }
  }
}
